{
 "data": {
  "question": {
   "questionId": "1872",
   "questionFrontendId": "1744",
   "categoryTitle": "Algorithms",
   "boundTopicId": 578805,
   "title": "Can You Eat Your Favorite Candy on Your Favorite Day?",
   "titleSlug": "can-you-eat-your-favorite-candy-on-your-favorite-day",
   "content": "\u003cp\u003eYou are given a \u003cstrong\u003e(0-indexed)\u003c/strong\u003e array of positive integers \u003ccode\u003ecandiesCount\u003c/code\u003e where \u003ccode\u003ecandiesCount[i]\u003c/code\u003e represents the number of candies of the\u0026nbsp;\u003ccode\u003ei\u003csup\u003eth\u003c/sup\u003e\u003c/code\u003e\u0026nbsp;type you have. You are also given a 2D array \u003ccode\u003equeries\u003c/code\u003e where \u003ccode\u003equeries[i] = [favoriteType\u003csub\u003ei\u003c/sub\u003e, favoriteDay\u003csub\u003ei\u003c/sub\u003e, dailyCap\u003csub\u003ei\u003c/sub\u003e]\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003eYou play a game with the following rules:\u003c/p\u003e\n\n\u003cul\u003e\n\t\u003cli\u003eYou start eating candies on day \u003ccode\u003e\u003cstrong\u003e0\u003c/strong\u003e\u003c/code\u003e.\u003c/li\u003e\n\t\u003cli\u003eYou \u003cb\u003ecannot\u003c/b\u003e eat \u003cstrong\u003eany\u003c/strong\u003e candy of type \u003ccode\u003ei\u003c/code\u003e unless you have eaten \u003cstrong\u003eall\u003c/strong\u003e candies of type \u003ccode\u003ei - 1\u003c/code\u003e.\u003c/li\u003e\n\t\u003cli\u003eYou must eat \u003cstrong\u003eat least\u003c/strong\u003e \u003cstrong\u003eone\u003c/strong\u003e candy per day until you have eaten all the candies.\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eConstruct a boolean array \u003ccode\u003eanswer\u003c/code\u003e such that \u003ccode\u003eanswer.length == queries.length\u003c/code\u003e and \u003ccode\u003eanswer[i]\u003c/code\u003e is \u003ccode\u003etrue\u003c/code\u003e if you can eat a candy of type \u003ccode\u003efavoriteType\u003csub\u003ei\u003c/sub\u003e\u003c/code\u003e on day \u003ccode\u003efavoriteDay\u003csub\u003ei\u003c/sub\u003e\u003c/code\u003e without eating \u003cstrong\u003emore than\u003c/strong\u003e \u003ccode\u003edailyCap\u003csub\u003ei\u003c/sub\u003e\u003c/code\u003e candies on \u003cstrong\u003eany\u003c/strong\u003e day, and \u003ccode\u003efalse\u003c/code\u003e otherwise. Note that you can eat different types of candy on the same day, provided that you follow rule 2.\u003c/p\u003e\n\n\u003cp\u003eReturn \u003cem\u003ethe constructed array \u003c/em\u003e\u003ccode\u003eanswer\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003e\u0026nbsp;\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eExample 1:\u003c/strong\u003e\u003c/p\u003e\n\n\u003cpre\u003e\n\u003cstrong\u003eInput:\u003c/strong\u003e candiesCount = [7,4,5,3,8], queries = [[0,2,2],[4,2,4],[2,13,1000000000]]\n\u003cstrong\u003eOutput:\u003c/strong\u003e [true,false,true]\n\u003cstrong\u003eExplanation:\u003c/strong\u003e\n1- If you eat 2 candies (type 0) on day 0 and 2 candies (type 0) on day 1, you will eat a candy of type 0 on day 2.\n2- You can eat at most 4 candies each day.\n   If you eat 4 candies every day, you will eat 4 candies (type 0) on day 0 and 4 candies (type 0 and type 1) on day 1.\n   On day 2, you can only eat 4 candies (type 1 and type 2), so you cannot eat a candy of type 4 on day 2.\n3- If you eat 1 candy each day, you will eat a candy of type 2 on day 13.\n\u003c/pre\u003e\n\n\u003cp\u003e\u003cstrong\u003eExample 2:\u003c/strong\u003e\u003c/p\u003e\n\n\u003cpre\u003e\n\u003cstrong\u003eInput:\u003c/strong\u003e candiesCount = [5,2,6,4,1], queries = [[3,1,2],[4,10,3],[3,10,100],[4,100,30],[1,3,1]]\n\u003cstrong\u003eOutput:\u003c/strong\u003e [false,true,true,false,false]\n\u003c/pre\u003e\n\n\u003cp\u003e\u0026nbsp;\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eConstraints:\u003c/strong\u003e\u003c/p\u003e\n\n\u003cul\u003e\n\t\u003cli\u003e\u003ccode\u003e1 \u0026lt;= candiesCount.length \u0026lt;= 10\u003csup\u003e5\u003c/sup\u003e\u003c/code\u003e\u003c/li\u003e\n\t\u003cli\u003e\u003ccode\u003e1 \u0026lt;= candiesCount[i] \u0026lt;= 10\u003csup\u003e5\u003c/sup\u003e\u003c/code\u003e\u003c/li\u003e\n\t\u003cli\u003e\u003ccode\u003e1 \u0026lt;= queries.length \u0026lt;= 10\u003csup\u003e5\u003c/sup\u003e\u003c/code\u003e\u003c/li\u003e\n\t\u003cli\u003e\u003ccode\u003equeries[i].length == 3\u003c/code\u003e\u003c/li\u003e\n\t\u003cli\u003e\u003ccode\u003e0 \u0026lt;= favoriteType\u003csub\u003ei\u003c/sub\u003e \u0026lt; candiesCount.length\u003c/code\u003e\u003c/li\u003e\n\t\u003cli\u003e\u003ccode\u003e0 \u0026lt;= favoriteDay\u003csub\u003ei\u003c/sub\u003e \u0026lt;= 10\u003csup\u003e9\u003c/sup\u003e\u003c/code\u003e\u003c/li\u003e\n\t\u003cli\u003e\u003ccode\u003e1 \u0026lt;= dailyCap\u003csub\u003ei\u003c/sub\u003e \u0026lt;= 10\u003csup\u003e9\u003c/sup\u003e\u003c/code\u003e\u003c/li\u003e\n\u003c/ul\u003e\n",
   "translatedTitle": "你能在你最喜欢的那天吃到你最喜欢的糖果吗？",
   "translatedContent": "\u003cp\u003e给你一个下标从 \u003cstrong\u003e0\u003c/strong\u003e 开始的正整数数组 \u003ccode\u003ecandiesCount\u003c/code\u003e ，其中 \u003ccode\u003ecandiesCount[i]\u003c/code\u003e 表示你拥有的第 \u003ccode\u003ei\u003c/code\u003e 类糖果的数目。同时给你一个二维数组 \u003ccode\u003equeries\u003c/code\u003e ，其中 \u003ccode\u003equeries[i] = [favoriteType\u003csub\u003ei\u003c/sub\u003e, favoriteDay\u003csub\u003ei\u003c/sub\u003e, dailyCap\u003csub\u003ei\u003c/sub\u003e]\u003c/code\u003e 。\u003c/p\u003e\n\n\u003cp\u003e你按照如下规则进行一场游戏：\u003c/p\u003e\n\n\u003cul\u003e\n\t\u003cli\u003e你从第 \u003ccode\u003e\u003cstrong\u003e0\u003c/strong\u003e\u003c/code\u003e\u003cstrong\u003e \u003c/strong\u003e天开始吃糖果。\u003c/li\u003e\n\t\u003cli\u003e你在吃完 \u003cstrong\u003e所有\u003c/strong\u003e 第 \u003ccode\u003ei - 1\u003c/code\u003e 类糖果之前，\u003cstrong\u003e不能\u003c/strong\u003e 吃任何一颗第 \u003ccode\u003ei\u003c/code\u003e 类糖果。\u003c/li\u003e\n\t\u003cli\u003e在吃完所有糖果之前，你必须每天 \u003cstrong\u003e至少\u003c/strong\u003e 吃 \u003cstrong\u003e一颗\u003c/strong\u003e 糖果。\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003e请你构建一个布尔型数组 \u003ccode\u003eanswer\u003c/code\u003e ，满足 \u003ccode\u003eanswer.length == queries.length\u003c/code\u003e 。\u003ccode\u003eanswer[i]\u003c/code\u003e 为 \u003ccode\u003etrue\u003c/code\u003e 的条件是：在每天吃 \u003cstrong\u003e不超过\u003c/strong\u003e \u003ccode\u003edailyCap\u003csub\u003ei\u003c/sub\u003e\u003c/code\u003e\u003csub\u003e \u003c/sub\u003e颗糖果的前提下，你可以在第 \u003ccode\u003efavoriteDay\u003csub\u003ei\u003c/sub\u003e\u003c/code\u003e 天吃到第 \u003ccode\u003efavoriteType\u003csub\u003ei\u003c/sub\u003e\u003c/code\u003e 类糖果；否则 \u003ccode\u003eanswer[i]\u003c/code\u003e 为 \u003ccode\u003efalse\u003c/code\u003e 。注意，只要满足上面 3 条规则中的第二条规则，你就可以在同一天吃不同类型的糖果。\u003c/p\u003e\n\n\u003cp\u003e请你返回得到的数组\u003cem\u003e \u003c/em\u003e\u003ccode\u003eanswer\u003c/code\u003e 。\u003c/p\u003e\n\n\u003cp\u003e \u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003e示例 1：\u003c/strong\u003e\u003c/p\u003e\n\n\u003cpre\u003e\n\u003cb\u003e输入：\u003c/b\u003ecandiesCount = [7,4,5,3,8], queries = [[0,2,2],[4,2,4],[2,13,1000000000]]\n\u003cb\u003e输出：\u003c/b\u003e[true,false,true]\n\u003cstrong\u003e提示：\u003c/strong\u003e\n1- 在第 0 天吃 2 颗糖果(类型 0），第 1 天吃 2 颗糖果（类型 0），第 2 天你可以吃到类型 0 的糖果。\n2- 每天你最多吃 4 颗糖果。即使第 0 天吃 4 颗糖果（类型 0），第 1 天吃 4 颗糖果（类型 0 和类型 1），你也没办法在第 2 天吃到类型 4 的糖果。换言之，你没法在每天吃 4 颗糖果的限制下在第 2 天吃到第 4 类糖果。\n3- 如果你每天吃 1 颗糖果，你可以在第 13 天吃到类型 2 的糖果。\n\u003c/pre\u003e\n\n\u003cp\u003e\u003cstrong\u003e示例 2：\u003c/strong\u003e\u003c/p\u003e\n\n\u003cpre\u003e\n\u003cb\u003e输入：\u003c/b\u003ecandiesCount = [5,2,6,4,1], queries = [[3,1,2],[4,10,3],[3,10,100],[4,100,30],[1,3,1]]\n\u003cb\u003e输出：\u003c/b\u003e[false,true,true,false,false]\n\u003c/pre\u003e\n\n\u003cp\u003e \u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003e提示：\u003c/strong\u003e\u003c/p\u003e\n\n\u003cul\u003e\n\t\u003cli\u003e\u003ccode\u003e1 \u003c= candiesCount.length \u003c= 10\u003csup\u003e5\u003c/sup\u003e\u003c/code\u003e\u003c/li\u003e\n\t\u003cli\u003e\u003ccode\u003e1 \u003c= candiesCount[i] \u003c= 10\u003csup\u003e5\u003c/sup\u003e\u003c/code\u003e\u003c/li\u003e\n\t\u003cli\u003e\u003ccode\u003e1 \u003c= queries.length \u003c= 10\u003csup\u003e5\u003c/sup\u003e\u003c/code\u003e\u003c/li\u003e\n\t\u003cli\u003e\u003ccode\u003equeries[i].length == 3\u003c/code\u003e\u003c/li\u003e\n\t\u003cli\u003e\u003ccode\u003e0 \u003c= favoriteType\u003csub\u003ei\u003c/sub\u003e \u003c candiesCount.length\u003c/code\u003e\u003c/li\u003e\n\t\u003cli\u003e\u003ccode\u003e0 \u003c= favoriteDay\u003csub\u003ei\u003c/sub\u003e \u003c= 10\u003csup\u003e9\u003c/sup\u003e\u003c/code\u003e\u003c/li\u003e\n\t\u003cli\u003e\u003ccode\u003e1 \u003c= dailyCap\u003csub\u003ei\u003c/sub\u003e \u003c= 10\u003csup\u003e9\u003c/sup\u003e\u003c/code\u003e\u003c/li\u003e\n\u003c/ul\u003e\n",
   "isPaidOnly": false,
   "difficulty": "Medium",
   "likes": 110,
   "dislikes": 0,
   "isLiked": null,
   "similarQuestions": "[]",
   "contributors": [],
   "langToValidPlayground": "{\"cpp\": false, \"java\": false, \"python\": false, \"python3\": false, \"mysql\": false, \"mssql\": false, \"oraclesql\": false, \"c\": false, \"csharp\": false, \"javascript\": false, \"ruby\": false, \"bash\": false, \"swift\": false, \"golang\": false, \"scala\": false, \"html\": false, \"pythonml\": false, \"kotlin\": false, \"rust\": false, \"php\": false, \"typescript\": false, \"racket\": false}",
   "topicTags": [
    {
     "name": "Math",
     "slug": "math",
     "translatedName": "数学",
     "__typename": "TopicTagNode"
    }
   ],
   "companyTagStats": null,
   "codeSnippets": [
    {
     "lang": "C++",
     "langSlug": "cpp",
     "code": "class Solution {\npublic:\n    vector\u003cbool\u003e canEat(vector\u003cint\u003e\u0026 candiesCount, vector\u003cvector\u003cint\u003e\u003e\u0026 queries) {\n\n    }\n};",
     "__typename": "CodeSnippetNode"
    },
    {
     "lang": "Java",
     "langSlug": "java",
     "code": "class Solution {\n    public boolean[] canEat(int[] candiesCount, int[][] queries) {\n\n    }\n}",
     "__typename": "CodeSnippetNode"
    },
    {
     "lang": "Python",
     "langSlug": "python",
     "code": "class Solution(object):\n    def canEat(self, candiesCount, queries):\n        \"\"\"\n        :type candiesCount: List[int]\n        :type queries: List[List[int]]\n        :rtype: List[bool]\n        \"\"\"",
     "__typename": "CodeSnippetNode"
    },
    {
     "lang": "Python3",
     "langSlug": "python3",
     "code": "class Solution:\n    def canEat(self, candiesCount: List[int], queries: List[List[int]]) -\u003e List[bool]:",
     "__typename": "CodeSnippetNode"
    },
    {
     "lang": "C",
     "langSlug": "c",
     "code": "\n\n/**\n * Note: The returned array must be malloced, assume caller calls free().\n */\nbool* canEat(int* candiesCount, int candiesCountSize, int** queries, int queriesSize, int* queriesColSize, int* returnSize){\n\n}",
     "__typename": "CodeSnippetNode"
    },
    {
     "lang": "C#",
     "langSlug": "csharp",
     "code": "public class Solution {\n    public bool[] CanEat(int[] candiesCount, int[][] queries) {\n\n    }\n}",
     "__typename": "CodeSnippetNode"
    },
    {
     "lang": "JavaScript",
     "langSlug": "javascript",
     "code": "/**\n * @param {number[]} candiesCount\n * @param {number[][]} queries\n * @return {boolean[]}\n */\nvar canEat = function(candiesCount, queries) {\n\n};",
     "__typename": "CodeSnippetNode"
    },
    {
     "lang": "Ruby",
     "langSlug": "ruby",
     "code": "# @param {Integer[]} candies_count\n# @param {Integer[][]} queries\n# @return {Boolean[]}\ndef can_eat(candies_count, queries)\n\nend",
     "__typename": "CodeSnippetNode"
    },
    {
     "lang": "Swift",
     "langSlug": "swift",
     "code": "class Solution {\n    func canEat(_ candiesCount: [Int], _ queries: [[Int]]) -\u003e [Bool] {\n\n    }\n}",
     "__typename": "CodeSnippetNode"
    },
    {
     "lang": "Go",
     "langSlug": "golang",
     "code": "func canEat(candiesCount []int, queries [][]int) []bool {\n\n}",
     "__typename": "CodeSnippetNode"
    },
    {
     "lang": "Scala",
     "langSlug": "scala",
     "code": "object Solution {\n    def canEat(candiesCount: Array[Int], queries: Array[Array[Int]]): Array[Boolean] = {\n\n    }\n}",
     "__typename": "CodeSnippetNode"
    },
    {
     "lang": "Kotlin",
     "langSlug": "kotlin",
     "code": "class Solution {\n    fun canEat(candiesCount: IntArray, queries: Array\u003cIntArray\u003e): BooleanArray {\n\n    }\n}",
     "__typename": "CodeSnippetNode"
    },
    {
     "lang": "Rust",
     "langSlug": "rust",
     "code": "impl Solution {\n    pub fn can_eat(candies_count: Vec\u003ci32\u003e, queries: Vec\u003cVec\u003ci32\u003e\u003e) -\u003e Vec\u003cbool\u003e {\n\n    }\n}",
     "__typename": "CodeSnippetNode"
    },
    {
     "lang": "PHP",
     "langSlug": "php",
     "code": "class Solution {\n\n    /**\n     * @param Integer[] $candiesCount\n     * @param Integer[][] $queries\n     * @return Boolean[]\n     */\n    function canEat($candiesCount, $queries) {\n\n    }\n}",
     "__typename": "CodeSnippetNode"
    },
    {
     "lang": "TypeScript",
     "langSlug": "typescript",
     "code": "function canEat(candiesCount: number[], queries: number[][]): boolean[] {\n\n};",
     "__typename": "CodeSnippetNode"
    },
    {
     "lang": "Racket",
     "langSlug": "racket",
     "code": "(define/contract (can-eat candiesCount queries)\n  (-\u003e (listof exact-integer?) (listof (listof exact-integer?)) (listof boolean?))\n\n  )",
     "__typename": "CodeSnippetNode"
    }
   ],
   "stats": "{\"totalAccepted\": \"24.9K\", \"totalSubmission\": \"68.3K\", \"totalAcceptedRaw\": 24931, \"totalSubmissionRaw\": 68282, \"acRate\": \"36.5%\"}",
   "hints": [
    "The query is true if and only if your favorite day is in between the earliest and latest possible days to eat your favorite candy.",
    "To get the earliest day, you need to eat dailyCap candies every day. To get the latest day, you need to eat 1 candy every day.",
    "The latest possible day is the total number of candies with a smaller type plus the number of your favorite candy minus 1.",
    "The earliest possible day that you can eat your favorite candy is the total number of candies with a smaller type divided by dailyCap."
   ],
   "solution": null,
   "status": "ac",
   "sampleTestCase": "[7,4,5,3,8]\n[[0,2,2],[4,2,4],[2,13,1000000000]]",
   "metaData": "{\n  \"name\": \"canEat\",\n  \"params\": [\n    {\n      \"name\": \"candiesCount\",\n      \"type\": \"integer[]\"\n    },\n    {\n      \"type\": \"integer[][]\",\n      \"name\": \"queries\"\n    }\n  ],\n  \"return\": {\n    \"type\": \"boolean[]\"\n  }\n}",
   "judgerAvailable": true,
   "judgeType": "large",
   "mysqlSchemas": [],
   "enableRunCode": true,
   "envInfo": "{\"cpp\":[\"C++\",\"\u003cp\u003e\\u7248\\u672c\\uff1a\u003ccode\u003eclang 11\u003c\\/code\u003e \\u91c7\\u7528\\u6700\\u65b0C++ 17\\u6807\\u51c6\\u3002\u003c\\/p\u003e\\r\\n\\r\\n\u003cp\u003e\\u7f16\\u8bd1\\u65f6\\uff0c\\u5c06\\u4f1a\\u91c7\\u7528\u003ccode\u003e-O2\u003c\\/code\u003e\\u7ea7\\u4f18\\u5316\\u3002\u003ca href=\\\"https:\\/\\/github.com\\/google\\/sanitizers\\/wiki\\/AddressSanitizer\\\" target=\\\"_blank\\\"\u003eAddressSanitizer\u003c\\/a\u003e \\u4e5f\\u88ab\\u5f00\\u542f\\u6765\\u68c0\\u6d4b\u003ccode\u003eout-of-bounds\u003c\\/code\u003e\\u548c\u003ccode\u003euse-after-free\u003c\\/code\u003e\\u9519\\u8bef\\u3002\u003c\\/p\u003e\\r\\n\\r\\n\u003cp\u003e\\u4e3a\\u4e86\\u4f7f\\u7528\\u65b9\\u4fbf\\uff0c\\u5927\\u90e8\\u5206\\u6807\\u51c6\\u5e93\\u7684\\u5934\\u6587\\u4ef6\\u5df2\\u7ecf\\u88ab\\u81ea\\u52a8\\u5bfc\\u5165\\u3002\u003c\\/p\u003e\"],\"java\":[\"Java\",\"\u003cp\u003e\\u7248\\u672c\\uff1a\u003ccode\u003eJava SE 13\u003c\\/code\u003e\\u3002\\u53ef\\u4ee5\\u4f7f\\u7528Java 8\\u7684\\u7279\\u6027\\u4f8b\\u5982\\uff0clambda expressions \\u548c stream API\\u3002\u003c\\/p\u003e\\r\\n\\r\\n\u003cp\u003e\\u4e3a\\u4e86\\u65b9\\u4fbf\\u8d77\\u89c1\\uff0c\\u5927\\u90e8\\u5206\\u6807\\u51c6\\u5e93\\u7684\\u5934\\u6587\\u4ef6\\u5df2\\u88ab\\u5bfc\\u5165\\u3002\u003c\\/p\u003e\\r\\n\\r\\n\u003cp\u003e\\u5305\\u542b Pair \\u7c7b: https:\\/\\/docs.oracle.com\\/javase\\/8\\/javafx\\/api\\/javafx\\/util\\/Pair.html \u003c\\/p\u003e\"],\"python\":[\"Python\",\"\u003cp\u003e\\u7248\\u672c\\uff1a \u003ccode\u003ePython 2.7.12\u003c\\/code\u003e\u003c\\/p\u003e\\r\\n\\r\\n\u003cp\u003e\\u4e3a\\u4e86\\u65b9\\u4fbf\\u8d77\\u89c1\\uff0c\\u5927\\u90e8\\u5206\\u5e38\\u7528\\u5e93\\u5df2\\u7ecf\\u88ab\\u81ea\\u52a8 \\u5bfc\\u5165\\uff0c\\u5982\\uff1a\u003ca href=\\\"https:\\/\\/docs.python.org\\/2\\/library\\/array.html\\\" target=\\\"_blank\\\"\u003earray\u003c\\/a\u003e, \u003ca href=\\\"https:\\/\\/docs.python.org\\/2\\/library\\/bisect.html\\\" target=\\\"_blank\\\"\u003ebisect\u003c\\/a\u003e, \u003ca href=\\\"https:\\/\\/docs.python.org\\/2\\/library\\/collections.html\\\" target=\\\"_blank\\\"\u003ecollections\u003c\\/a\u003e\\u3002\\u5982\\u679c\\u60a8\\u9700\\u8981\\u4f7f\\u7528\\u5176\\u4ed6\\u5e93\\u51fd\\u6570\\uff0c\\u8bf7\\u81ea\\u884c\\u5bfc\\u5165\\u3002\u003c\\/p\u003e\\r\\n\\r\\n\u003cp\u003e\\u6ce8\\u610f Python 2.7 \u003ca href=\\\"https:\\/\\/www.python.org\\/dev\\/peps\\/pep-0373\\/\\\" target=\\\"_blank\\\"\u003e\\u5c06\\u57282020\\u5e74\\u540e\\u4e0d\\u518d\\u7ef4\\u62a4\u003c\\/a\u003e\\u3002 \\u5982\\u60f3\\u4f7f\\u7528\\u6700\\u65b0\\u7248\\u7684Python\\uff0c\\u8bf7\\u9009\\u62e9Python 3\\u3002\u003c\\/p\u003e\"],\"c\":[\"C\",\"\u003cp\u003e\\u7248\\u672c\\uff1a\u003ccode\u003eGCC 8.2\u003c\\/code\u003e\\uff0c\\u91c7\\u7528GNU99\\u6807\\u51c6\\u3002\u003c\\/p\u003e\\r\\n\\r\\n\u003cp\u003e\\u7f16\\u8bd1\\u65f6\\uff0c\\u5c06\\u4f1a\\u91c7\\u7528\u003ccode\u003e-O1\u003c\\/code\u003e\\u7ea7\\u4f18\\u5316\\u3002 \u003ca href=\\\"https:\\/\\/github.com\\/google\\/sanitizers\\/wiki\\/AddressSanitizer\\\" target=\\\"_blank\\\"\u003eAddressSanitizer\u003c\\/a\u003e\\u4e5f\\u88ab\\u5f00\\u542f\\u6765\\u68c0\\u6d4b\u003ccode\u003eout-of-bounds\u003c\\/code\u003e\\u548c\u003ccode\u003euse-after-free\u003c\\/code\u003e\\u9519\\u8bef\\u3002\u003c\\/p\u003e\\r\\n\\r\\n\u003cp\u003e\\u4e3a\\u4e86\\u4f7f\\u7528\\u65b9\\u4fbf\\uff0c\\u5927\\u90e8\\u5206\\u6807\\u51c6\\u5e93\\u7684\\u5934\\u6587\\u4ef6\\u5df2\\u7ecf\\u88ab\\u81ea\\u52a8\\u5bfc\\u5165\\u3002\u003c\\/p\u003e\\r\\n\\r\\n\u003cp\u003e\\u5982\\u60f3\\u4f7f\\u7528\\u54c8\\u5e0c\\u8868\\u8fd0\\u7b97, \\u60a8\\u53ef\\u4ee5\\u4f7f\\u7528 \u003ca href=\\\"https:\\/\\/troydhanson.github.io\\/uthash\\/\\\" target=\\\"_blank\\\"\u003euthash\u003c\\/a\u003e\\u3002 \\\"uthash.h\\\"\\u5df2\\u7ecf\\u9ed8\\u8ba4\\u88ab\\u5bfc\\u5165\\u3002\\u8bf7\\u770b\\u5982\\u4e0b\\u793a\\u4f8b:\u003c\\/p\u003e\\r\\n\\r\\n\u003cp\u003e\u003cb\u003e1. \\u5f80\\u54c8\\u5e0c\\u8868\\u4e2d\\u6dfb\\u52a0\\u4e00\\u4e2a\\u5bf9\\u8c61\\uff1a\u003c\\/b\u003e\\r\\n\u003cpre\u003e\\r\\nstruct hash_entry {\\r\\n    int id;            \\/* we'll use this field as the key *\\/\\r\\n    char name[10];\\r\\n    UT_hash_handle hh; \\/* makes this structure hashable *\\/\\r\\n};\\r\\n\\r\\nstruct hash_entry *users = NULL;\\r\\n\\r\\nvoid add_user(struct hash_entry *s) {\\r\\n    HASH_ADD_INT(users, id, s);\\r\\n}\\r\\n\u003c\\/pre\u003e\\r\\n\u003c\\/p\u003e\\r\\n\\r\\n\u003cp\u003e\u003cb\u003e2. \\u5728\\u54c8\\u5e0c\\u8868\\u4e2d\\u67e5\\u627e\\u4e00\\u4e2a\\u5bf9\\u8c61\\uff1a\u003c\\/b\u003e\\r\\n\u003cpre\u003e\\r\\nstruct hash_entry *find_user(int user_id) {\\r\\n    struct hash_entry *s;\\r\\n    HASH_FIND_INT(users, \u0026user_id, s);\\r\\n    return s;\\r\\n}\\r\\n\u003c\\/pre\u003e\\r\\n\u003c\\/p\u003e\\r\\n\\r\\n\u003cp\u003e\u003cb\u003e3. \\u4ece\\u54c8\\u5e0c\\u8868\\u4e2d\\u5220\\u9664\\u4e00\\u4e2a\\u5bf9\\u8c61\\uff1a\u003c\\/b\u003e\\r\\n\u003cpre\u003e\\r\\nvoid delete_user(struct hash_entry *user) {\\r\\n    HASH_DEL(users, user);  \\r\\n}\\r\\n\u003c\\/pre\u003e\\r\\n\u003c\\/p\u003e\"],\"csharp\":[\"C#\",\"\u003cp\u003e\u003ca href=\\\"https:\\/\\/docs.microsoft.com\\/en-us\\/dotnet\\/csharp\\/whats-new\\/csharp-8\\\" target=\\\"_blank\\\"\u003eC# 8.0\u003c\\/a\u003e\u003c\\/p\u003e\\r\\n\\r\\n\u003cp\u003e\\u60a8\\u7684\\u4ee3\\u7801\\u5728\\u7f16\\u8bd1\\u65f6\\u9ed8\\u8ba4\\u5f00\\u542f\\u4e86debug\\u6807\\u8bb0(\u003ccode\u003e\\/debug\u003c\\/code\u003e)\\u3002\u003c\\/p\u003e\"],\"javascript\":[\"JavaScript\",\"\u003cp\u003e\\u7248\\u672c\\uff1a\u003ccode\u003eNode.js 14.8.0\u003c\\/code\u003e\u003c\\/p\u003e\\r\\n\\r\\n\u003cp\u003e\\u60a8\\u7684\\u4ee3\\u7801\\u5728\\u6267\\u884c\\u65f6\\u5c06\\u5e26\\u4e0a \u003ccode\u003e--harmony\u003c\\/code\u003e \\u6807\\u8bb0\\u6765\\u5f00\\u542f \u003ca href=\\\"http:\\/\\/node.green\\/\\\" target=\\\"_blank\\\"\u003e\\u65b0\\u7248ES6\\u7279\\u6027\u003c\\/a\u003e\\u3002\u003c\\/p\u003e\\r\\n\\r\\n\u003cp\u003e\u003ca href=\\\"https:\\/\\/lodash.com\\\" target=\\\"_blank\\\"\u003elodash.js\u003c\\/a\u003e \\u5e93\\u5df2\\u7ecf\\u9ed8\\u8ba4\\u88ab\\u5305\\u542b\\u3002\u003c\\/p\u003e\\r\\n\\r\\n\u003cp\u003e \\u5982\\u9700\\u4f7f\\u7528\\u961f\\u5217\\/\\u4f18\\u5148\\u961f\\u5217\\uff0c\\u60a8\\u53ef\\u4f7f\\u7528 \u003ca href=\\\"https:\\/\\/github.com\\/datastructures-js\\/priority-queue\\\" target=\\\"_blank\\\"\u003e datastructures-js\\/priority-queue\u003c\\/a\u003e \\u548c \u003ca href=\\\"https:\\/\\/github.com\\/datastructures-js\\/queue\\\" target=\\\"_blank\\\"\u003e datastructures-js\\/queue\u003c\\/a\u003e\\u3002\u003c\\/p\u003e\"],\"ruby\":[\"Ruby\",\"\u003cp\u003e\\u4f7f\\u7528\u003ccode\u003eRuby 2.7\u003c\\/code\u003e\\u6267\\u884c\u003c\\/p\u003e\\r\\n\\r\\n\u003cp\u003e\\u4e00\\u4e9b\\u5e38\\u7528\\u7684\\u6570\\u636e\\u7ed3\\u6784\\u5df2\\u5728 Algorithms \\u6a21\\u5757\\u4e2d\\u63d0\\u4f9b\\uff1ahttps:\\/\\/www.rubydoc.info\\/github\\/kanwei\\/algorithms\\/Algorithms\u003c\\/p\u003e\"],\"swift\":[\"Swift\",\"\u003cp\u003e\\u7248\\u672c\\uff1a\u003ccode\u003eSwift 5.3\u003c\\/code\u003e\u003c\\/p\u003e\\r\\n\\r\\n\u003cp\u003e\\u6211\\u4eec\\u901a\\u5e38\\u4fdd\\u8bc1\\u66f4\\u65b0\\u5230 \u003ca href=\\\"https:\\/\\/swift.org\\/download\\/\\\" target=\\\"_blank\\\"\u003eApple\\u653e\\u51fa\\u7684\\u6700\\u65b0\\u7248Swift\u003c\\/a\u003e\\u3002\\u5982\\u679c\\u60a8\\u53d1\\u73b0Swift\\u4e0d\\u662f\\u6700\\u65b0\\u7248\\u7684\\uff0c\\u8bf7\\u8054\\u7cfb\\u6211\\u4eec\\uff01\\u6211\\u4eec\\u5c06\\u5c3d\\u5feb\\u66f4\\u65b0\\u3002\u003c\\/p\u003e\"],\"golang\":[\"Go\",\"\u003cp\u003e\\u7248\\u672c\\uff1a\u003ccode\u003eGo 1.16.2\u003c\\/code\u003e\u003c\\/p\u003e\\r\\n\\r\\n\u003cp\u003e\\u652f\\u6301 \u003ca href=\\\"https:\\/\\/godoc.org\\/github.com\\/emirpasic\\/gods\\\" target=\\\"_blank\\\"\u003ehttps:\\/\\/godoc.org\\/github.com\\/emirpasic\\/gods\u003c\\/a\u003e \\u7b2c\\u4e09\\u65b9\\u5e93\\u3002\u003c\\/p\u003e\"],\"python3\":[\"Python3\",\"\u003cp\u003e\\u7248\\u672c\\uff1a\u003ccode\u003ePython 3.9\u003c\\/code\u003e\u003c\\/p\u003e\\r\\n\\r\\n\u003cp\u003e\\u4e3a\\u4e86\\u65b9\\u4fbf\\u8d77\\u89c1\\uff0c\\u5927\\u90e8\\u5206\\u5e38\\u7528\\u5e93\\u5df2\\u7ecf\\u88ab\\u81ea\\u52a8 \\u5bfc\\u5165\\uff0c\\u5982\u003ca href=\\\"https:\\/\\/docs.python.org\\/3\\/library\\/array.html\\\" target=\\\"_blank\\\"\u003earray\u003c\\/a\u003e, \u003ca href=\\\"https:\\/\\/docs.python.org\\/3\\/library\\/bisect.html\\\" target=\\\"_blank\\\"\u003ebisect\u003c\\/a\u003e, \u003ca href=\\\"https:\\/\\/docs.python.org\\/3\\/library\\/collections.html\\\" target=\\\"_blank\\\"\u003ecollections\u003c\\/a\u003e\\u3002 \\u5982\\u679c\\u60a8\\u9700\\u8981\\u4f7f\\u7528\\u5176\\u4ed6\\u5e93\\u51fd\\u6570\\uff0c\\u8bf7\\u81ea\\u884c\\u5bfc\\u5165\\u3002\u003c\\/p\u003e\\r\\n\\r\\n\u003cp\u003e\\u5982\\u9700\\u4f7f\\u7528 Map\\/TreeMap \\u6570\\u636e\\u7ed3\\u6784\\uff0c\\u60a8\\u53ef\\u4f7f\\u7528 \u003ca href=\\\"http:\\/\\/www.grantjenks.com\\/docs\\/sortedcontainers\\/\\\" target=\\\"_blank\\\"\u003esortedcontainers\u003c\\/a\u003e \\u5e93\\u3002\u003c\\/p\u003e\"],\"scala\":[\"Scala\",\"\u003cp\u003e\\u7248\\u672c\\uff1a\u003ccode\u003eScala 2.13\u003c\\/code\u003e\u003c\\/p\u003e\"],\"kotlin\":[\"Kotlin\",\"\u003cp\u003e\\u7248\\u672c\\uff1a\u003ccode\u003eKotlin 1.3.10\u003c\\/code\u003e\u003c\\/p\u003e\"],\"rust\":[\"Rust\",\"\u003cp\u003e\\u7248\\u672c\\uff1a\u003ccode\u003erust 1.46.0\u003c\\/code\u003e\u003c\\/p\u003e\\r\\n\\r\\n\u003cp\u003e\\u652f\\u6301 crates.io \\u7684 \u003ca href=\\\"https:\\/\\/crates.io\\/crates\\/rand\\\" target=\\\"_blank\\\"\u003erand\u003c\\/a\u003e\u003c\\/p\u003e\"],\"php\":[\"PHP\",\"\u003cp\u003e\u003ccode\u003ePHP 7.2\u003c\\/code\u003e.\u003c\\/p\u003e\\r\\n\\r\\n\u003cp\u003eWith bcmath module.\u003c\\/p\u003e\"],\"typescript\":[\"TypeScript\",\"\u003cp\u003eTypeScript 4.1.5\u003c\\/p\u003e\\r\\n\\r\\n\u003cp\u003eCompile Options: --alwaysStrict --strictBindCallApply --strictFunctionTypes --target ES2020\u003c\\/p\u003e\"],\"racket\":[\"Racket\",\"\u003cp\u003e\u003ca href=\\\"https:\\/\\/docs.racket-lang.org\\/guide\\/performance.html#%28tech._c%29\\\" target=\\\"_blank\\\"\u003eRacket CS\u003c\\/a\u003e v8.0\u003c\\/p\u003e\\r\\n\\r\\n\u003cp\u003e\\u4f7f\\u7528 #lang racket\u003c\\/p\u003e\\r\\n\\r\\n\u003cp\u003e\\u5df2\\u9884\\u5148 (require data\\/gvector data\\/queue data\\/order data\\/heap). \\u82e5\\u9700\\u4f7f\\u7528\\u5176\\u5b83\\u6570\\u636e\\u7ed3\\u6784\\uff0c\\u53ef\\u81ea\\u884c require\\u3002\u003c\\/p\u003e\"]}",
   "book": null,
   "isSubscribed": false,
   "isDailyQuestion": false,
   "dailyRecordStatus": "NOT_START",
   "editorType": "CKEDITOR",
   "ugcQuestionId": null,
   "style": "LEETCODE",
   "exampleTestcases": "[7,4,5,3,8]\n[[0,2,2],[4,2,4],[2,13,1000000000]]\n[5,2,6,4,1]\n[[3,1,2],[4,10,3],[3,10,100],[4,100,30],[1,3,1]]",
   "__typename": "QuestionNode"
  }
 }
}